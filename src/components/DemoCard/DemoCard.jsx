/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from "react";
import { Tooltip, Button } from "@mui/material";
import StarImage from "src/assets/images/Card7_star.png";
import { styled } from "@mui/material/styles";
import Image1Image from "src/assets/images/Card7_Image.png";
import useDemoCard from "src/components/DemoCard/useDemoCard";

const TypeQuest = styled("div")(({ theme }) => ({
  backgroundColor: `rgba(250, 250, 250, 1)`,
  boxShadow: `0px 4px 6px rgba(3, 0, 161, 0.2)`,
  borderRadius: `8px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  width: "100%",
  height: "auto",
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  overflow: `hidden`,
}));

const Image1 = styled("div")({
  backgroundImage: `url(${Image1Image})`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  alignSelf: `stretch`,
  width: `290px`,
  margin: `0px`,
  overflow: `hidden`,
});

const TextButton = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `40px 40px 0px 28px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: `1`,
  margin: `0px 0px 0px 22px`,
});

const Content = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const About = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Label = styled("div")({
  borderRadius: `100px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Container = styled("div")(({ theme }) => ({
  backgroundColor: theme.palette["Info"]["Main"],
  borderRadius: `16px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `4px`,
  boxSizing: `border-box`,
  height: `28px`,
  margin: `0px`,
}));

const Typography = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `3px 6px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Label1 = styled("div")(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Secondary"]["Contrast"],
  fontStyle: theme.typography["Components"]["Chip"].fontStyle,
  fontFamily: theme.typography["Components"]["Chip"].fontFamily,
  fontWeight: theme.typography["Components"]["Chip"].fontWeight,
  fontSize: theme.typography["Components"]["Chip"].fontSize,
  letterSpacing: theme.typography["Components"]["Chip"].letterSpacing,
  lineHeight: theme.typography["Components"]["Chip"].lineHeight,
  textDecoration: theme.typography["Components"]["Chip"].textDecoration,
  textTransform: theme.typography["Components"]["Chip"].textTransform,
  margin: `0px`,
}));

const HotelName = styled("div")(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Secondary"],
  fontStyle: `normal`,
  fontFamily: `Roboto`,
  fontWeight: `400`,
  fontSize: `14px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  textTransform: `none`,
  margin: `0px 0px 0px 10px`,
}));

const Details = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `28px 0px 0px 0px`,
});

const Title = styled("div")(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: `normal`,
  fontFamily: `Roboto`,
  fontWeight: `700`,
  fontSize: `20px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Price = styled("div")(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Secondary"],
  fontStyle: theme.typography["Typography"]["Body 1"].fontStyle,
  fontFamily: theme.typography["Typography"]["Body 1"].fontFamily,
  fontWeight: theme.typography["Typography"]["Body 1"].fontWeight,
  fontSize: theme.typography["Typography"]["Body 1"].fontSize,
  letterSpacing: theme.typography["Typography"]["Body 1"].letterSpacing,
  lineHeight: theme.typography["Typography"]["Body 1"].lineHeight,
  textDecoration: theme.typography["Typography"]["Body 1"].textDecoration,
  textTransform: theme.typography["Typography"]["Body 1"].textTransform,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Rating = styled("div")({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `28px 0px 0px 0px`,
});

const Star = styled("img")({
  height: `15.83px`,
  width: `16.67px`,
  margin: `0px`,
});

const Rating1 = styled("div")(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Secondary"],
  fontStyle: theme.typography["Typography"]["Body 1"].fontStyle,
  fontFamily: theme.typography["Typography"]["Body 1"].fontFamily,
  fontWeight: theme.typography["Typography"]["Body 1"].fontWeight,
  fontSize: theme.typography["Typography"]["Body 1"].fontSize,
  letterSpacing: theme.typography["Typography"]["Body 1"].letterSpacing,
  lineHeight: theme.typography["Typography"]["Body 1"].lineHeight,
  textDecoration: theme.typography["Typography"]["Body 1"].textDecoration,
  textTransform: theme.typography["Typography"]["Body 1"].textTransform,
  flex: `1`,
  height: `21px`,
  margin: `0px 0px 0px 6px`,
}));

const Description = styled("div")(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette["Text"]["Primary"],
  fontStyle: `normal`,
  fontFamily: `Roboto`,
  fontWeight: `400`,
  fontSize: `20px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `28px 0px 0px 0px`,
}));

const ButtonClicked = styled("div")({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(25, 118, 210, 1)`,
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `700`,
  fontSize: `20px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  textTransform: `none`,
  height: `48px`,
  width: `138px`,
  margin: `28px 0px 0px 0px`,
});

const ButtonContained = styled(Button)({
  margin: `28px 0px 0px 0px`,
});

function DemoCard(props) {
  const { fns } = useDemoCard(props);

  return (
    <TypeQuest className={props.className}>
      <Tooltip
        arrow={true}
        placement={"top"}
        title={"Description for the image"}
      >
        <Image1></Image1>
      </Tooltip>
      <TextButton>
        <Content>
          <About>
            <Label>
              <Container>
                <Typography>
                  <Label1>{`NEW`}</Label1>
                </Typography>
              </Container>
            </Label>
            <HotelName>{`Boutique Hotel`}</HotelName>
          </About>
          <Details>
            <Title>{"Title for the card"}</Title>
            <Price>{"$300 / night"}</Price>
          </Details>
          <Rating>
            <Star src={StarImage} loading="lazy" alt={"star"} />
            <Rating1>{"5.00 (200 reviews)"}</Rating1>
          </Rating>
          <Description>
            {
              "Lorem ipsum test to be seen and not read for placement only. Lorem ipsum test to be seen."
            }
          </Description>
          {false && <ButtonClicked>{`Button Clicked!`}</ButtonClicked>}
          <ButtonContained
            variant="contained"
            size="large"
            color="primary"
            onClick={fns.handleButtonClick}
          >
            {" "}
            Book ME{" "}
          </ButtonContained>
        </Content>
      </TextButton>
    </TypeQuest>
  );
}

export default DemoCard;
